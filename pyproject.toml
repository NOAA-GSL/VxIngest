[tool.poetry]
name = "vxingest"
version = "0.1.0"
description = ""
authors = [
    "Ian McGinnis <ian.mcginnis@noaa.gov>",
    "Randy Pierce <randy.pierce@noaa.gov>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pyyaml = "^6.0.1"
xarray = "^2024.6.0"
netcdf4 = "^1.7.1"
cfgrib = "^0.9.13.0"
couchbase = "^4.3.0"
pyproj = "^3.6.1"
numpy = "^2.0.0"
metpy = "^1.6.2"
prometheus-client = "^0.20.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
types-pyyaml = "^6.0.12.20240311"
ruff = "^0.5.0"
coverage = "^7.5.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
ingest = "vxingest.main:run_ingest"

[tool.pytest.ini_options]
markers = [
    "integration: marks tests that need external resources like databases or data files (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.ruff]
# Dirs that contain third party example scripts and other languages
exclude = [
    "scripts",
    "meta_update_middleware",
]
output-format="pylint"


# For a list of available rules, see: https://docs.astral.sh/ruff/rules/
lint.select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "UP", # pyupgrade
    "I", # isort
    "PTH", # flake8-use-pathlib
    "PT", # flake8-pytest-style
    "B", # bugbear
    "SIM", # flake8-simplify
    "LOG", # flake8-logging
]

lint.ignore = [
    "E501", # Supress line-too-long warnings: trust the formatter's judgement on this one.
    "W505", # Supress line-too-long warnings: trust the formatter's judgement on this one.
]
