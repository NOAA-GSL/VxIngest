'\" t
.\"     Title: cbbackupmgr-merge
.\"    Author: Couchbase
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2023-09-20
.\"    Manual: Couchbase Server Manual
.\"    Source: Couchbase Server 7.2.2-6401
.\"  Language: English
.\"
.TH "CBBACKUPMGR\-MERGE" "1" "2023-09-20" "Couchbase Server 7.2.2\-6401" "Couchbase Server Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
cbbackupmgr-merge \- Merges two or more backups together
.SH "SYNOPSIS"
.sp
.nf
cbbackupmgr merge [\-\-archive <archive_dir>] [\-\-repo <repo_name>]
                  [\-\-start <start>] [\-\-end <end>]
                  [\-\-date\-range <range>] [\-\-threads <num>]
                  [\-\-no\-progress\-bar] [\-\-passphrase <passphrase>]
                  [\-\-km\-key\-url <url>] [\-\-km\-endpoint <endpoint>]
                  [\-\-km\-region <region>] [\-\-km\-access\-key\-id <id>]
                  [\-\-km\-secret\-access\-key <key>] [\-\-km\-auth\-file <path>]
.fi
.br
.SH "DESCRIPTION"
.sp
The merge command is an Enterprise Edition command which can be used to merge
two or more backups together. Since cbbackupmgr is a utility that always
attempts to take incremental backups it is necessary to reclaim disk space from
time to time.  Merging data will deduplicate similar keys in backup files
being merged together in order to create a single smaller backup file. Doing
merges should replace the full backup step by taking multiple incremental
backups of a Couchbase cluster and converting them into a single full backup.
Since this process takes place in the backup archive there is no cluster
overhead to merging data together. See \fBcbbackupmgr\-strategies\fP(7) for
suggestions on using the merge command in your backup process.
.SH "OPTIONS"
.sp
Below are a list of required parameters for the merge command.
.SS "Required"
.sp
\-a,\-\-archive <archive_dir>
.RS 4
The archive directory to merge data in.
.RE
.sp
\-r,\-\-repo <repo_name>
.RS 4
The name of the backup repository to merge data in.
.RE
.SS "Optional"
.sp
\-\-start <start>
.RS 4
The first backup to merge. See START AND END for information on what values
are accepted.
.RE
.sp
\-\-end <end>
.RS 4
The final backup to merge. See START AND END for information on what values
are accepted.
.RE
.sp
\-\-date\-range <range>
.RS 4
This flag will accept a comma separated range in the same formats as
\f(CR\-\-start\fP and \f(CR\-\-end\fP. See START AND END section for more information on the
accepted formats.
.RE
.sp
\-t,\-\-threads <num>
.RS 4
Specifies the number of concurrent vBuckets that will be merged at a time.
Increasing the threads will make the merge faster but will also increase the
resource used by the client. This parameter defaults to 1 but it is
recommended to increase it to match the number of CPUs in the client machine.
.RE
.sp
\-\-no\-progress\-bar
.RS 4
By default, a progress bar is printed to stdout so that the user can see how
long the merge is expected to take, the amount of data that is being transferred
per second, and the amount of data that has been merged. Specifying this flag
disables the progress bar and is useful when running automated jobs.
.RE
.SS "Encryption (Developer Preview)"
.sp
\-\-passphrase <passphrase>
.RS 4
Passphrase can be used instead of an external key manager. This is not
supported on production and should only be used in development or testing.
.RE
.sp
\-\-km\-key\-url <url>
.RS 4
Provides the Key Identifier in the external Key Management system. Currently
supported KMSs are AWS KMS, GCP KMS, Azure KeyVault, HashiCorp Vault Transit
secrets engine. The option can also be provided using the environmental
variable \f(CRCB_KM_KEY_URL\fP. For more on how to authenticate using the different
providers see \fBcbbackupmgr\-encryption\fP(7).
.sp
For AWS the expected key format is \f(CRawskms://<KEY\-ID|KEY\-ALIAS>\fP, for example
\f(CRawskms://alias\(rskeyAlias\fP.
.sp
For GCP the expected key format is \f(CRgcpkms://<KEY\-RESOURCE\-ID>\fP, for example
\f(CRgcpkms://projects/project\-id/locations/location/keyRings/keyring/cryptoKeys/key\fP.
.sp
For Azure key vault the expected key format is \f(CRazurekeyvault://<KEY\-IDENTIFIER>\fP
for example:
\f(CRazurekeyvault://vault\-name.vault.azure.net/object\-type/object\-name/object\-version\fP.
.sp
For HashiCorp Vault the expected format is \f(CRhashivaults://<HOST>/<KEY\-NAME>\fP
for example:
\f(CRhashivaults://127.0.0.1:8200/keyName\fP.
.RE
.sp
\-\-km\-region <region>
.RS 4
Required when using AWS KMS, it allows you to set the key region.
.RE
.sp
\-\-km\-endpoint <endpoint>
.RS 4
The host or address to use as your KMS. It will override the default SDK one.
.RE
.sp
\-\-km\-access\-key\-id <id>
.RS 4
The user ID used to connect to the key management service. It can also be
provided via \f(CRCB_KM_ACCESS_KEY_ID\fP environmental variable. Please refer
to \fBcbbackupmgr\-encryption\fP(7) for the required authentication for each
provider.
.RE
.sp
\-\-km\-secret\-access\-key <key>
.RS 4
The key used to connect to the key management service. It can also be
provided via the \f(CRCB_KM_SECRET_ACCESS_KEY\fP environmental variable. Please
refer to \fBcbbackupmgr\-encryption\fP(7) for the required authentication for
each provider.
.RE
.sp
\-\-km\-auth\-file <path>
.RS 4
The path to a file containing the authentication credentials for the key
management service. It can also be provided via the \f(CRCB_KM_AUTH_FILE\fP
environmental variable. Please refer to \fBcbbackupmgr\-encryption\fP(7) for the
required authentication for each provider.
.RE
.SH "START AND END"
.sp
This sub\-command accepts a \f(CR\-\-start\fP and \f(CR\-\-end\fP flag. These flags accept
multiple values to allow you to flexibly operate on a range of backups.
.SS "Indexes"
.sp
Indexes may be supplied to operate on a range of backups, for example
\f(CR\-\-start 1 \-\-end 2\fP will include start at the first backup and will finish with
the second backup. Note that the first backup is 1 and not 0 and that the
\f(CR\-\-end\fP flag is inclusive.
.SS "Short Dates"
.sp
Short dates may be supplied in the format \f(CRday\-month\-year\fP. For example
\f(CR\-\-start 01\-08\-2020 \-\-end 31\-08\-2020\fP will operate on all the backups which
were taken during August of 2020. Note that the end date is inclusive.
.sp
When supplying short dates, you may supply \f(CRstart\fP or \f(CRoldest\fP as a placeholder
for the date on which the first backup in this repository was taken. The
keywords \f(CRend\fP or \f(CRlatest\fP may be used as a placeholder for the date last
backup in the repository was taken.
.SS "Backup Names"
.sp
Backup names may be supplied as they exist on disk. For example
\f(CR\-\-start 2020\-08\-13T20_01_08.894226137+01_00 \-\-end 2020\-08\-13T20_01_12.348300092+01_00\fP
will cause the sub\-command to operate on all the backups which inclusively fall
between these two backups.
.sp
When supplying backup names, you may supply \f(CRstart\fP or \f(CRoldest\fP as a
placeholder for the first backup in the repository. The keywords \f(CRend\fP or
\f(CRlatest\fP may be used  as a placeholder for the final backup in the repository.
.SH "EXAMPLES"
.sp
In order to merge data, you need to have a backup repository with at least two
backups. Below is an example of merging a backup repository named "example" that
has two backups in it. The first backup contains the initial dataset. The second
backup was taken after four items were updated.
.sp
.if n .RS 4
.nf
.fam C
$ cbbackupmgr info \-a /data/backups \-r example \-\-all
Name     | Size    | # Backups  |
example  | 2.44MB  | 2          |

+  Backup                           | Size    | Type  | Source                 | Cluster UUID                      | Range  | Events  | Aliases  | Complete  |
+  2020\-06\-02T07_58_32.42306+01_00  | 2.38MB  | FULL  | http://localhost:8091  | c044f5eeb1dc16d0cd49dac29074b5f9  | N/A    | 0       | 1        | true      |

\-    Bucket   | Size    | Items  | Mutations  | Tombstones  | Views  | FTS  | Indexes  | CBAS  |
\-    example  | 2.38MB  | 8192   | 8192       | 0           | 0      | 0    | 0        | 0     |

+  Backup                           | Size     | Type  | Source                 | Cluster UUID                      | Range  | Events  | Aliases  | Complete  |
+  2020\-06\-03T08_00_22.62763+01_00  | 65.47KB  | INCR  | http://localhost:8091  | c044f5eeb1dc16d0cd49dac29074b5f9  | N/A    | 0       | 1        | true      |

\-    Bucket   | Size     | Items  | Mutations  | Tombstones  | Views  | FTS  | Indexes  | CBAS  |
\-    example  | 65.25KB  | 4      | 4          | 0           | 0      | 0    | 0        | 0     |

$ cbbackupmgr merge \-a /data/backup \-r example \-\-start 2020\-06\-02T07_58_32.42306+01_00 \(rs
 \-\-end 2020\-06\-03T08_00_22.62763+01_00

$ cbbackupmgr info \-a /data/backups \-r example \-\-all
Name     | Size    | # Backups  |
example  | 2.38MB  | 1          |

+  Backup                           | Size    | Type          | Source  | Cluster UUID                      | Range                                      | Events  | Aliases  | Complete  |
+  2020\-06\-03T08_00_22.62763+01_00  | 2.38MB  | MERGE \- FULL  | Merge   | c044f5eeb1dc16d0cd49dac29074b5f9  | 2020\-06\-02T07_58_32\-2020\-06\-02T08_00_22:2  | 0       | 1        | true      |

\-    Bucket   | Size    | Items  | Mutations  | Tombstones  | Views  | FTS  | Indexes  | CBAS  |
\-    example  | 2.38MB  | 8192   | 8192       | 0           | 0      | 0    | 0        | 0     |
.fam
.fi
.if n .RE
.sp
Upon completion of the merge the number of items in the backup files is the
same. This is because the keys in the second backup were also contained in the
first backup, but the keys in the second backup contained newer values and
overwrote the keys in the first backup during the merge. The timestamp of the
backup folder is also the same as the timestamp of the latest backup because the
new backup is a snapshot of the cluster at that point in time.
.SH "DISCUSSION"
.sp
It is important that internally the merge command is able to merge backups
together without corrupting the backup archive or leaving it in an intermediate
state. In order to ensure this behavior cbbackupmgr always creates a new backup
and completely merges all data before removing any backup files. When a merge is
started a .merge_status file is created in the backup repository to track the
merge progress. cbbackupmgr then copies the first backup to the .merge folder
and begins merging the other backups into .merge folder. After each backup is
merged the .merge_status file is updated to track the merge progress. if all
backups are merged together successfully, cbbackupmgr will start deleting the
old backups and then copy the fully merged backup into a folder containing the
same name as the backup specified by the \-\-end flag. If the cbbackupmgr utility
fails during this process, then the merge will either be completed or the
partial merge files will be removed from the backup repository during the next
invocation of the cbbackupmgr.
.sp
Since the merge command creates a new backup file before it removes the old ones
it is necessary to have at least as much free space as the backups that are to
be merge together.
.sp
For more information on suggestions for how to use the merge command in your
backup process see \fBcbbackupmgr\-strategies\fP(7)
.SH "ENVIRONMENT AND CONFIGURATION VARIABLES"
.sp
CB_ARCHIVE_PATH
.RS 4
Specifies the path to the backup archive. If the archive path is supplied as
a command line argument then this value is overridden.
.RE
.sp
CB_ENCRYPTION_PASSPHRASE
.RS 4
Specifies the passphrase used for encryption.
.RE
.sp
CB_KM_KEY_URL
.RS 4
Specifies the URL identifying the encryption key on the KMS. See
\f(CR\-\-km\-key\-url\fP for the expected format and accepted KMSs.
.RE
.sp
CB_KM_ACCESS_ID
.RS 4
Specifies the key/user ID used to connect to the KMS.
.RE
.sp
CB_KM_SECRET_ACCESS_KEY
.RS 4
Specifies the secret key/token used to connect to the KMS.
.RE
.sp
CB_KM_AUTH_FILE
.RS 4
Specifies a path to a file containing the required credentials to connect to
the KMS.
.RE
.SH "FILES"
.sp
\&.merge_status
.RS 4
File storing information on the progress of the merge.
.RE
.sp
\&.merge
.RS 4
Directory storing intermediate merge data.
.RE
.SH "SEE ALSO"
.sp
\fBcbbackupmgr\-info\fP(1),
\fBcbbackupmgr\-strategies\fP(1),
\fBcbbackupmgr\-encryption\fP(7),
\fBcbbackupmgr\-network\-filesystems\fP(7)
.SH "CBBACKUPMGR"
.sp
Part of the \fBcbbackupmgr\fP(1) suite
.SH "AUTHOR"
.sp
Couchbase