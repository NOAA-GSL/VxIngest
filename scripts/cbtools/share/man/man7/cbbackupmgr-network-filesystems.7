'\" t
.\"     Title: cbbackupmgr-network-filesystems
.\"    Author: Couchbase
.\" Generator: Asciidoctor 2.0.16
.\"      Date: 2023-09-20
.\"    Manual: Couchbase Server Manual
.\"    Source: Couchbase Server 7.2.2-6401
.\"  Language: English
.\"
.TH "CBBACKUPMGR\-NETWORK\-FILESYSTEMS" "7" "2023-09-20" "Couchbase Server 7.2.2\-6401" "Couchbase Server Manual"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
cbbackupmgr-network-filesystems \- Storing cbbackupmgr archive on centralized storage using network filesystems
.SH "DESCRIPTION"
.sp
A document which covers some important topics related to using cbbackupmgr with
common network filesystems such as NFS and CIFS/SMB.
.SH "PERFORMANCE"
.sp
The cbbackupmgr tool uses SQLite when storing data on disk, SQLite has a
read\-modify\-write update pattern; this means that for each key we insert into
our SQLite index we have to perform a read to the underlying storage. For local
filesystems, this isn\(cqt significantly expensive because the operating systems
filesystem cache is extremely likely to cache these repeated reads. This isn\(cqt
always the case for network filesystems.
.sp
On the most commonly used network filesystems, these reads will not be cached
meaning the underlying client must perform one or more network operations
resulting in significantly higher latency than would be experienced when using
a local filesystem.
.sp
Some newer versions of network filesystems such as NFSv4 have better support
for locking, for example
.URL "https://tools.ietf.org/html/rfc7530#page\-13" "delegation" "."
However it\(cqs worth
noting that delegation isn\(cqt a mandatory feature and it depends on whether the
client/server supports it and actively accepts/grants delegations.
.sp
Newer versions of CIFS/SMB support opportunistic locking which provides similar
functionality to NFS delegation i.e. allow cached read/writes. Note that again
this is only supported in later versions of CIFS/SMB and depends on
client/server support.
.SH "NFS"
.sp
As stated above, cbbackupmgr uses SQLite when storing data on disk, internally
SQLite uses file locking to guard access to the database and it is one of the
features required to allow SQLite to expose its atomic commit behavior. This
means there\(cqs a few things to consider:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Some NFS server implementations only provide facade level locking, in some
cases (for instance where other processes are accessing the archive) this can
result in database corruption.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.  sp -1
.  IP \(bu 2.3
.\}
Some NFS server implementations have a limit on the number of locks that can
be held at once. This means it\(cqs likely that backups will only work when
paired with a version greater than 6.6.0 (both the backup client/cluster).
.RE
.SH "CIFS/SMB"
.sp
Given that SQLite uses file locking to expose its atomic commit behavior, and
that most CIFS/SMB implementations don\(cqt support requesting advisory bytes range
locks, you must mount your CIFS/SMB share using the \f(CRnobrl\fP option.  For more
information see \c
.URL "https://linux.die.net/man/8/mount.cifs" "mount.cifs(8)" "."
.sp
During normal operation \f(CRcbbackupmgr\fP will create and overwrite unix style
hidden files ("dotfiles"). Depending on the version of CIFS/SMB the config
option \f(CRhide dot files = no\fP may need to be set otherwise these operations
will fail with \f(CRpermission denied\fP errors. Please note that by default, this
option will be set to \f(CRyes\fP. When hitting \f(CRpermission denied\fP errors for
files beginning with a \f(CR.\fP you should retry setting \f(CRhide dot files = no\fP
before contacting support.
.sp
As with NFS, due care and attention should be taken to ensure that cbbackupmgr
is the only process accessing the archive whilst it\(cqs in use; this is because
some systems don\(cqt honor opportunistic locks and may therefore modify files
which are actively locked, resulting in corruption.
.SH "SEE ALSO"
.sp
\fBcbbackupmgr\-backup\fP(1),
\fBcbbackupmgr\-restore\fP(1),
\fBcbbackupmgr\-merge\fP(1),
.SH "CBBACKUPMGR"
.sp
Part of the \fBcbbackupmgr\fP(1) suite
.SH "AUTHOR"
.sp
Couchbase